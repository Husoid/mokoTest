[versions]
# plugin
plugin_agp = "8.2.2"
plugin_compose = "1.6.0"
kotlin = "1.9.22"
plugin_kotlin_serialization_version = "1.9.22"
buildconfig-version = "5.3.5"

# libs
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
kotlin_compiler_extension_version = "1.5.10"
moko-version = "0.24.0-alpha-5"
androidx-activityCompose = "1.8.2"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.11.0"
androidx-test-junit = "1.1.5"
compose = "1.6.2"
junit = "4.13.2"
odyssey_version = "1.3.40"
activityKtx = "1.8.2"
kodein_version = "7.20.1"
kotlin_serialization_core_version = "1.6.2"
kotlin_coroutines_core_version = "1.8.0"
ktor_version = "2.3.8"
kvault-version = "1.12.0"
robolectric-version = "4.9.2"
security-version = "crypto"
kviewmodel_version = "0.14"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }

# jetbrains kotlin
kotlin-serialization-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlin_serialization_core_version" }
kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlin_coroutines_core_version" }

# compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

# навигация compose
odyssey-compose = {group = "io.github.alexgladkov", name = "odyssey-compose", version.ref = "odyssey_version" }
odyssey-core = {group = "io.github.alexgladkov", name = "odyssey-core", version.ref = "odyssey_version" }

# библиотека ViewModel
kviewmodel-core = {group = "com.adeo", name = "kviewmodel", version.ref = "kviewmodel_version" }
kviewmodel-compose = {group = "com.adeo", name = "kviewmodel-compose", version.ref = "kviewmodel_version" }
kviewmodel-odyssey = {group = "com.adeo", name = "kviewmodel-odyssey", version.ref = "kviewmodel_version" }

# DI зависимости
kodein = { group = "org.kodein.di", name = "kodein-di", version.ref = "kodein_version" }

# Для работы с сетью
ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor_version" }
ktor-json = { group = "io.ktor", name = "ktor-client-json", version.ref = "ktor_version" }
ktor-ios = { group = "io.ktor", name = "ktor-client-ios", version.ref = "ktor_version" }
ktor-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor_version" }
ktor-kotlin-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor_version" }
ktor-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor_version" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor_version" }
ktor-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor_version" }

# Для доступа к ресурсам
moko-classpath =  {group = "dev.icerock.moko", name = "resources-generator", version.ref = "moko-version"}
moko-resource = {group = "dev.icerock.moko", name = "resources", version.ref = "moko-version"}
moko-resource-compose = {group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-version"}

# Secure key-value storage for Kotlin Multiplatform
kvault = {group = "com.liftric", name = "kvault", version.ref = "kvault-version"}
roboelectric = {group = "org.robolectric", name = "robolectric", version.ref = "robolectric-version"}
security-crypto = {group = "androidx.security", name = "security-crypto", version.ref = "security-version"}

[bundles]
moko-resources = ["moko-resource", "moko-resource-compose"]
ktor = ["ktor-negotiation", "ktor-kotlin-json", "ktor-serialization", "ktor-logging", "ktor-json"]
kviewmodel = ["kviewmodel-core", "kviewmodel-compose", "kviewmodel-odyssey"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "plugin_agp" }
androidLibrary = { id = "com.android.library", version.ref = "plugin_agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "plugin_compose" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "plugin_kotlin_serialization_version" }
mokoMultiplatform = { id = "dev.icerock.mobile.multiplatform-resources"}
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig-version"}